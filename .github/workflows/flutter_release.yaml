---
# .github/workflows/flutter-release.yml
# Triggered when the 'Auto Versioning & Tagging' workflow successfully completes.

name: Flutter Release

on:
  workflow_run:
    workflows: ["Auto Versioning & Tagging"] # Name of the workflow that triggers this one
    types:
      - completed # Trigger when the workflow completes
    branches:
      - main # Only run if the triggering workflow ran on the main branch

jobs:
  # This job will conditionally run based on the outcome of the triggering workflow
  # and will fetch the tag created by the auto-tag workflow.
  create_release:
    runs-on: ubuntu-latest
    # Only proceed if the triggering workflow (Auto Versioning & Tagging) was successful
    if: github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: write # Required for creating releases

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # fetch-depth: 0 is crucial to get the full commit history and tags.
          # We explicitly fetch tags in the next step to ensure they are available.
          fetch-depth: 0

      - name: Fetch All Tags
        run: git fetch --tags # Explicitly fetch all tags from the remote

      - name: Get Latest Tag
        id: get_tag
        run: |
          # Get the latest tag from the repository
          # Use 'git tag --sort=-v:refname | head -n 1' for a more reliable latest tag retrieval
          # especially if there are multiple tags on the same commit or non-sequential tags.
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)
          echo "Latest tag found: $LATEST_TAG"
          if [ -z "$LATEST_TAG" ]; then
            echo "::error::No tag found to create a release from. Exiting."
            exit 1
          fi
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.32.6
      
      - name: Get Flutter Dependencies
        run: flutter pub get
      
      - name: Analyze Code
        run: flutter analyze --no-fatal-infos --no-fatal-warnings
      
      - name: Run Tests
        run: flutter test

      # Build and Release for Linux
      - name: Build Linux Release
        run: |
          sudo apt-get update && sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
          flutter config --enable-linux-desktop
          flutter build linux
      - name: Zip Linux Release
        run: zip -r linux-release.zip build/linux/x64/release/bundle/
      - name: Create GitHub Release (Linux)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }} # Use the tag fetched from the repo
          name: Release ${{ steps.get_tag.outputs.tag }}
          files: linux-release.zip
          body: |
            # Release Notes for ${{ steps.get_tag.outputs.tag }}
            
            This release includes the latest features and bug fixes.
            
            Refer to the commit history for detailed changes.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use default GITHUB_TOKEN for creating release

      # Build and Release for Windows
      - name: Build Windows Release
        run: |
          flutter config --enable-windows-desktop
          flutter build windows
      - name: Compress Windows Release
        run: Compress-Archive -Path build\windows\runner\Release\* -DestinationPath windows-release.zip
      - name: Create GitHub Release (Windows)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          files: windows-release.zip
          body: |
            # Release Notes for ${{ steps.get_tag.outputs.tag }}
            
            This release includes the latest features and bug fixes.
            
            Refer to the commit history for detailed changes.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build and Release for Android
      - name: Build Android APK Release
        run: flutter build apk --release
      - name: Create GitHub Release (Android)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          files: build/app/outputs/flutter-apk/app-release.apk
          body: |
            # Release Notes for ${{ steps.get_tag.outputs.tag }}
            
            This release includes the latest features and bug fixes.
            
            Refer to the commit history for detailed changes.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build and Release for Web
      - name: Build Web Release
        run: flutter build web --release
      - name: Zip Web Release
        run: zip -r web-release.zip build/web/
      - name: Create GitHub Release (Web)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          files: web-release.zip
          body: |
            # Release Notes for ${{ steps.get_tag.outputs.tag }}
            
            This release includes the latest features and bug fixes.
            
            Refer to the commit history for detailed changes.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
