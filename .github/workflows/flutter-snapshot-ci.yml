---
# .github/workflows/flutter-snapshot-ci.yml
# CI build for development branch pushes, pull requests, and daily snapshots.

name: Flutter Snapshot CI

on:
  push:
    branches:
      - development # Trigger on pushes to the development branch
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  schedule:
    # Runs daily at 00:00 UTC (adjust as needed)
    - cron: '0 0 * * *'
  workflow_dispatch: # Allows manual triggering of snapshot builds

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true
  
jobs:
  analyze-and-test:
    # Only run for non-draft pull requests or pushes/schedules
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.32.6

      - name: Get Flutter Dependencies
        run: flutter pub get
      
      - name: Analyze Code
        run: flutter analyze --no-fatal-infos --no-fatal-warnings
      
      - name: Run Tests
        run: flutter test

  build-web:
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: analyze-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.32.6
      - name: Get Flutter Dependencies
        run: flutter pub get
      - name: Build Web Release
        run: flutter build web --release
      - name: Upload Web Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-snapshot
          path: build/web/
          retention-days: 1 # Keep artifacts for a short period

  build-linux:
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: analyze-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.32.6
      - name: Install Linux Dependencies
        run: sudo apt-get update && sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
      - name: Enable Linux Desktop
        run: flutter config --enable-linux-desktop
      - name: Get Flutter Dependencies
        run: flutter pub get
      - name: Build Linux Release
        run: flutter build linux
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-snapshot
          path: build/linux/x64/release/bundle/
          retention-days: 1

  build-windows:
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch'
    runs-on: windows-latest # Explicitly use a Windows runner for Windows build
    needs: analyze-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.32.6
      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop
      - name: Get Flutter Dependencies
        run: flutter pub get
      - name: Build Windows Release
        run: flutter build windows
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-snapshot
          path: build/windows/x64/runner/Release/
          retention-days: 1

  build-android:
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: analyze-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.32.6
      - name: Get Flutter Dependencies
        run: flutter pub get
      - name: Build Android APK Release
        run: flutter build apk --release
      - name: Upload Android Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-snapshot
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 1

  create-snapshot-release:
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: [build-web, build-linux, build-windows, build-android] # This job depends on all build jobs
    permissions:
      contents: write # Required for creating releases

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed to get commit SHA for release name

      - name: Download Web Artifact
        uses: actions/download-artifact@v4
        with:
          name: web-snapshot
          path: ./web-artifact

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-snapshot
          path: ./linux-artifact

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-snapshot
          path: ./windows-artifact

      - name: Download Android Artifact
        uses: actions/download-artifact@v4
        with:
          name: android-snapshot
          path: ./android-artifact

      - name: Prepare Artifacts for Release
        run: |
          # Zip web artifact if it's not already a single zip file
          # The path for web-snapshot is build/web/, so we need to zip its contents
          cd web-artifact
          zip -r ../web-snapshot.zip ./*
          cd ..

          # Zip linux artifact if it's not already a single zip file
          # The path for linux-snapshot is build/linux/x64/release/bundle/, so we need to zip its contents
          cd linux-artifact
          zip -r ../linux-snapshot.zip ./*
          cd ..

          # Zip windows artifact if it's not already a single zip file
          # The path for windows-snapshot is build\windows\x64\runner\Release\, so we need to zip its contents
          cd windows-artifact
          zip -r ../windows-snapshot.zip ./*
          cd ..

          # Android APK is already a single file, just move it to root for easy access
          mv android-artifact/*.apk android-snapshot.apk

          ls -lh # List prepared artifacts for verification

      - name: Create/Update GitHub Snapshot Prerelease
        uses: ncipollo/release-action@v1
        with:
          tag: snapshot-latest # A fixed tag for the latest snapshot
          name: Daily Snapshot Build (${{ github.sha }})
          prerelease: true
          allowUpdates: true # Allow updating this release
          body: |
            ## Latest Snapshot Build
            
            This is an automated daily snapshot build from the `development` branch.
            
            **Commit SHA**: `${{ github.sha }}`
            **Triggered by**: `${{ github.event_name }}`
            
            **Artifacts:**
            - Web: `web-snapshot.zip`
            - Linux: `linux-snapshot.zip`
            - Windows: `windows-snapshot.zip`
            - Android: `android-snapshot.apk`
            
            Please test thoroughly and report any issues.
          artifacts: |
            web-snapshot.zip
            linux-snapshot.zip
            windows-snapshot.zip
            android-snapshot.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use default GITHUB_TOKEN for creating prerelease
